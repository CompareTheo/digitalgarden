<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepage on Jason C. Mitchell</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Homepage on Jason C. Mitchell</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Welcome</title>
      <link>http://localhost:1313/articles/welcome/</link>
      <pubDate>Wed, 18 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/welcome/</guid>
      <description>&lt;p&gt;Hello, and welcome to my articles! I&amp;rsquo;m thrilled to have you here. My name is Jason, and I am the library assistant for electronic resources at Loyola Marymount University in Los Angeles, California. I am incredibly passionate about the intersection of technology and library science.&lt;/p&gt;&#xA;&lt;p&gt;In my day-to-day work, I handle a range of tasks, from updating the LibGuides A-Z list and troubleshooting electronic resource access issues to developing custom scripts for metadata harvest. I frequently interface with library stakeholders and vendors to resolve issues, develop systems-based approaches to manage metadata, and create custom scripts for ensuring metadata compliance. Additionally, I’ve been involved in creating procedural documentation, analyzing workflows, and spearheading assessments to improve acquisition workflows, especially after our Integrated Library System (ILS) migration.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Alma License Creation Script</title>
      <link>http://localhost:1313/portfolio/license_creation/</link>
      <pubDate>Mon, 20 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portfolio/license_creation/</guid>
      <description>&lt;p&gt;Managing electronic resource licenses efficiently is a crucial part of library acquisitions workflows. To streamline this process, I developed a set of Python scripts that automate the creation and submission of license records in Alma. These scripts take structured data from an Excel file, convert it into XML, split it into individual records, and push them to Alma’s API.&lt;/p&gt;&#xA;&lt;p&gt;This post breaks down how the three scripts—license_creation.py, license_split.py, and license_push.py—work together to automate license record management.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Choosing Python as My Primary Scriptng Language</title>
      <link>http://localhost:1313/articles/choosing_python/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/choosing_python/</guid>
      <description>&lt;p&gt;As someone who spends a significant amount of time managing metadata, troubleshooting electronic resource access, and creating custom tools for library workflows, scripting has become an indispensable part of my professional toolkit. Early in my journey, I made the decision to adopt Python as my primary scripting language, a choice that has shaped how I approach problem-solving and automation in technical services. But like any decision, it’s worth revisiting periodically to ensure it still aligns with my needs and goals. Lately, I’ve been broadening my horizons, exploring other scripting languages, particularly Bash, and reflecting on what Python offers compared to other tools.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OCLC Work ID Retrieval Script</title>
      <link>http://localhost:1313/portfolio/work_id/</link>
      <pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portfolio/work_id/</guid>
      <description>&lt;p&gt;Libraries rely on accurate metadata to manage collections, align bookstore adoption lists with their catalogs, and reconcile electronic and physical holdings. However, matching titles across various editions and formats remains a persistent challenge for technical services staff. The OCLC Work ID serves as a crucial data point for disambiguating records, grouping related editions, and enhancing bibliographic consistency.&lt;/p&gt;&#xA;&lt;p&gt;To address this challenge, I developed a script that automates the retrieval of Work IDs using OCLC’s WorldCat Search API v.2. This tool enables library staff to efficiently identify and compare records based on ISBNs, improving metadata management and acquisitions workflows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>GOBI Duplicate Purchase Checker</title>
      <link>http://localhost:1313/portfolio/duplicate_checker/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portfolio/duplicate_checker/</guid>
      <description>&lt;p&gt;The &lt;strong&gt;GOBI Duplicate Purchase Checker&lt;/strong&gt; is a helpful tool for libraries using the GOBI platform and Alma to streamline acquisitions workflows. By automating the process of checking for duplicate holdings in Alma’s Institution Zone (IZ) via the SRU (Search/Retrieve via URL) protocol, it reduces manual effort and supports more efficient collection management.&lt;/p&gt;&#xA;&lt;p&gt;The original version of this tool, developed by &lt;a href=&#34;https://github.com/MrJeremyHobbs/GobiChecker&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34; &gt;Jeremy Hobbs&lt;/a&gt;, was designed for institutions using both an Institution Zone (IZ) and a Network Zone (NZ). However, since Loyola Marymount University operates without a Network Zone, I adapted the script to better fit our specific needs. These changes aim to expand the tool’s usefulness for libraries like ours and refine its functionality to address nuances in our acquisitions workflows.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/documentation/sccp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/documentation/sccp/</guid>
      <description>&lt;h3 id=&#34;embedded-pdf-below&#34;&gt;Embedded PDF Below:&lt;/h3&gt;&#xA;&lt;script type=&#34;text/javascript&#34; src=&#39;http://localhost:1313/js/pdf-js/build/pdf.js&#39;&gt;&lt;/script&gt;&#xA;&#xA;&lt;style&gt;&#xA;  #embed-pdf-container {&#xA;    position: relative;&#xA;    width: 100%;&#xA;    height: auto;&#xA;    min-height: 20vh;&#xA;     &#xA;  }&#xA;  &#xA;  .pdf-canvas {&#xA;    border: 1px solid black;&#xA;    direction: ltr;&#xA;    width: 100%;&#xA;    height: auto;&#xA;    display: none;&#xA;  }&#xA;  &#xA;  #the-canvas {&#xA;    border: 1px solid black;&#xA;    direction: ltr;&#xA;    width: 100%;&#xA;    height: auto;&#xA;    display: none;&#xA;  }&#xA;  &#xA;  &#xA;  .pdf-loadingWrapper {&#xA;    display: none;&#xA;    justify-content: center;&#xA;    align-items: center;&#xA;    width: 100%;&#xA;    height: 350px;&#xA;  }&#xA;  &#xA;  .pdf-loading {&#xA;    display: inline-block;&#xA;    width: 50px;&#xA;    height: 50px;&#xA;    border: 3px solid #d2d0d0;;&#xA;    border-radius: 50%;&#xA;    border-top-color: #383838;&#xA;    animation: spin 1s ease-in-out infinite;&#xA;    -webkit-animation: spin 1s ease-in-out infinite;&#xA;  }&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  #overlayText {&#xA;    word-wrap: break-word;&#xA;    display: grid;&#xA;    justify-content: end;&#xA;  }&#xA;  &#xA;  #overlayText a {&#xA;    position: relative;&#xA;    top: 10px;&#xA;    right: 4px;&#xA;    color: #000;&#xA;    margin: auto;&#xA;    background-color: #eeeeee;&#xA;    padding: 0.3em 1em;&#xA;    border: solid 2px;&#xA;    border-radius: 12px;&#xA;    border-color: #00000030;&#xA;    text-decoration: none;&#xA;  }&#xA;  &#xA;  #overlayText svg {&#xA;    height: clamp(1em, 2vw, 1.4em);&#xA;    width:  clamp(1em, 2vw, 1.4em);&#xA;  }&#xA;  &#xA;  &#xA;  &#xA;  @keyframes spin {&#xA;    to { -webkit-transform: rotate(360deg); }&#xA;  }&#xA;  @-webkit-keyframes spin {&#xA;    to { -webkit-transform: rotate(360deg); }&#xA;  }&#xA;  &lt;/style&gt;&lt;div class=&#34;embed-pdf-container&#34; id=&#34;embed-pdf-container-5a619d86&#34;&gt;&#xA;    &lt;div class=&#34;pdf-loadingWrapper&#34; id=&#34;pdf-loadingWrapper-5a619d86&#34;&gt;&#xA;        &lt;div class=&#34;pdf-loading&#34; id=&#34;pdf-loading-5a619d86&#34;&gt;&lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div id=&#34;overlayText&#34;&gt;&#xA;      &lt;a href=&#34;http://localhost:1313/documentation/SCCP.pdf&#34; aria-label=&#34;Download&#34; download&gt;&#xA;        &lt;svg aria-hidden=&#34;true&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 18 18&#34;&gt;&#xA;            &lt;path d=&#34;M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z&#34; /&gt;&#xA;        &lt;/svg&gt;&#xA;      &lt;/a&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;canvas class=&#34;pdf-canvas&#34; id=&#34;pdf-canvas-5a619d86&#34;&gt;&lt;/canvas&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;pdf-paginator&#34; id=&#34;pdf-paginator-5a619d86&#34;&gt;&#xA;    &lt;button id=&#34;pdf-prev-5a619d86&#34;&gt;Previous&lt;/button&gt;&#xA;    &lt;button id=&#34;pdf-next-5a619d86&#34;&gt;Next&lt;/button&gt; &amp;nbsp; &amp;nbsp;&#xA;    &lt;span&gt;&#xA;      &lt;span class=&#34;pdf-pagenum&#34; id=&#34;pdf-pagenum-5a619d86&#34;&gt;&lt;/span&gt; / &lt;span class=&#34;pdf-pagecount&#34; id=&#34;pdf-pagecount-5a619d86&#34;&gt;&lt;/span&gt;&#xA;    &lt;/span&gt;&#xA;    &lt;a class=&#34;pdf-source&#34; id=&#34;pdf-source-5a619d86&#34; href=&#34;http://localhost:1313/documentation/SCCP.pdf&#34;&gt;[pdf]&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;noscript&gt;&#xA;View the PDF file &lt;a class=&#34;pdf-source&#34; id=&#34;pdf-source-noscript-5a619d86&#34; href=&#34;http://localhost:1313/documentation/SCCP.pdf&#34;&gt;here&lt;/a&gt;.&#xA;&lt;/noscript&gt;&#xA;&#xA;&lt;script type=&#34;text/javascript&#34;&gt;&#xA;    (function(){&#xA;    var url = &#39;\/documentation\/SCCP.pdf&#39;;&#xA;&#xA;    var hidePaginator = &#34;&#34; === &#34;true&#34;;&#xA;    var hideLoader = &#34;&#34; === &#34;true&#34;;&#xA;    var selectedPageNum = parseInt(&#34;&#34;) || 1;&#xA;&#xA;    &#xA;    var pdfjsLib = window[&#39;pdfjs-dist/build/pdf&#39;];&#xA;&#xA;    &#xA;    if (pdfjsLib.GlobalWorkerOptions.workerSrc == &#39;&#39;)&#xA;    pdfjsLib.GlobalWorkerOptions.workerSrc = &#34;http:\/\/localhost:1313\/&#34; + &#39;js/pdf-js/build/pdf.worker.js&#39;;&#xA;&#xA;    &#xA;    var pdfDoc = null,&#xA;        pageNum = selectedPageNum,&#xA;        pageRendering = false,&#xA;        pageNumPending = null,&#xA;        scale = 3,&#xA;        canvas = document.getElementById(&#39;pdf-canvas-5a619d86&#39;),&#xA;        ctx = canvas.getContext(&#39;2d&#39;),&#xA;        paginator = document.getElementById(&#34;pdf-paginator-5a619d86&#34;),&#xA;        loadingWrapper = document.getElementById(&#39;pdf-loadingWrapper-5a619d86&#39;);&#xA;&#xA;&#xA;    &#xA;    showPaginator();&#xA;    showLoader();&#xA;&#xA;    &#xA;&#xA;    function renderPage(num) {&#xA;      pageRendering = true;&#xA;      &#xA;      pdfDoc.getPage(num).then(function(page) {&#xA;        var viewport = page.getViewport({scale: scale});&#xA;        canvas.height = viewport.height;&#xA;        canvas.width = viewport.width;&#xA;&#xA;        &#xA;        var renderContext = {&#xA;          canvasContext: ctx,&#xA;          viewport: viewport&#xA;        };&#xA;        var renderTask = page.render(renderContext);&#xA;&#xA;        &#xA;        renderTask.promise.then(function() {&#xA;          pageRendering = false;&#xA;          showContent();&#xA;&#xA;          if (pageNumPending !== null) {&#xA;            &#xA;            renderPage(pageNumPending);&#xA;            pageNumPending = null;&#xA;          }&#xA;        });&#xA;      });&#xA;&#xA;      &#xA;      document.getElementById(&#39;pdf-pagenum-5a619d86&#39;).textContent = num;&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function showContent() {&#xA;      loadingWrapper.style.display = &#39;none&#39;;&#xA;      canvas.style.display = &#39;block&#39;;&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function showLoader() {&#xA;      if(hideLoader) return&#xA;      loadingWrapper.style.display = &#39;flex&#39;;&#xA;      canvas.style.display = &#39;none&#39;;&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function showPaginator() {&#xA;      if(hidePaginator) return&#xA;      paginator.style.display = &#39;block&#39;;&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function queueRenderPage(num) {&#xA;      if (pageRendering) {&#xA;        pageNumPending = num;&#xA;      } else {&#xA;        renderPage(num);&#xA;      }&#xA;    }&#xA;&#xA;    &#xA;&#xA;    function onPrevPage() {&#xA;      if (pageNum &lt;= 1) {&#xA;        return;&#xA;      }&#xA;      pageNum--;&#xA;      queueRenderPage(pageNum);&#xA;    }&#xA;    document.getElementById(&#39;pdf-prev-5a619d86&#39;).addEventListener(&#39;click&#39;, onPrevPage);&#xA;&#xA;    &#xA;&#xA;    function onNextPage() {&#xA;      if (pageNum &gt;= pdfDoc.numPages) {&#xA;        return;&#xA;      }&#xA;      pageNum++;&#xA;      queueRenderPage(pageNum);&#xA;    }&#xA;    document.getElementById(&#39;pdf-next-5a619d86&#39;).addEventListener(&#39;click&#39;, onNextPage);&#xA;&#xA;    &#xA;&#xA;    pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {&#xA;      pdfDoc = pdfDoc_;&#xA;      var numPages = pdfDoc.numPages;&#xA;      document.getElementById(&#39;pdf-pagecount-5a619d86&#39;).textContent = numPages;&#xA;&#xA;      &#xA;      if(pageNum &gt; numPages) {&#xA;        pageNum = numPages&#xA;      }&#xA;&#xA;      &#xA;      renderPage(pageNum);&#xA;    });&#xA;    })();&#xA;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
